# Copyright Deno Land Inc. All Rights Reserved. Proprietary and confidential.

apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: main
  namespace: {{ .Release.Namespace }}
spec:
  autoscaler:
    maxReplicas: 10
    minReplicas: 1
    targetMemoryUtilization: 70
  config:
    exporters:
      nop: {}
      debug:
        verbosity: normal
      {{- if .Values.otlp }}
      otlp:
        endpoint: "{{ .Values.otlp.endpoint }}"
        tls:
          insecure: true
      {{- end }}
      {{- if .Values.otlphttp }}
      otlphttp:
        endpoint: "{{ .Values.otlphttp.endpoint }}"
        {{- if .Values.otlphttp.auth }}
        auth:
          authenticator: {{ .Values.otlphttp.auth.authenticator }}
        {{- end }}
      {{- end }}
      {{- if .Values.otel_clickhouse }}
      clickhouse: {{ .Values.otel_clickhouse | toJson }}
      {{- end }}
    extensions:
      health_check: 
        endpoint: 0.0.0.0:13133
      zpages: {}
      {{- if and (.Values.otlphttp) (.Values.otlphttp.auth) (eq .Values.otlphttp.auth.authenticator "basicauth/otlp") }}
      basicauth/otlp:
        client_auth:
          username: '{{ .Values.otlphttp.auth.username }}'
          password: '{{ .Values.otlphttp.auth.password }}'
      {{- end }}
    processors:
      batch: {}
      transform/metric_namespace:
        metric_statements:
          - context: metric
            conditions:
              - resource.attributes["service.namespace"] != ""
            statements:
              - set(name, Concat([resource.attributes["service.namespace"], name], "_"))
      resource:
        attributes:
        - action: upsert
          key: cloud.provider
          value: {{ quote .Values.provider }}
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    service:
      extensions:
        - health_check
        - zpages
        {{- if and (.Values.otlphttp) (.Values.otlphttp.auth) (eq .Values.otlphttp.auth.authenticator "basicauth/otlp") }}
        - basicauth/otlp
        {{- end }}
      pipelines:
        {{- $exporters := list "nop" }}
        {{- if .Values.otlp }}
          {{- $exporters = append $exporters "otlp" }}
        {{- end }}
        {{- if .Values.otlphttp }}
          {{- $exporters = append $exporters "otlphttp" }}
        {{- end }}
        {{- if .Values.otel_clickhouse }}
          {{- $exporters = append $exporters "clickhouse" }}
        {{- end }}
        logs:
          exporters: {{ toJson $exporters }}
          processors: [batch, resource]
          receivers: [otlp]
        traces:
          exporters: {{ toJson $exporters }}
          processors: [batch, resource]
          receivers: [otlp]
        metrics:
          exporters: {{ toJson $exporters }}
          processors: [batch, resource, transform/metric_namespace]
          receivers: [otlp]
  image: otel/opentelemetry-collector-contrib:0.114.0
  mode: deployment
  ports:
  - name: otlpgrpc
    port: 4317
  - name: otlphttp
    port: 4318
  - name: metrics
    port: 8888
  - name: healthcheck
    port: 13133
  - name: zpages
    port: 55679
  resources:
    limits:
      cpu: 2
      memory: 2Gi
    requests:
      cpu: 300m
      memory: 512Mi
