apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller
  namespace: {{ .Release.Namespace }}
  annotations:
    {{- range $k, $v := .Values.controller.serviceaccount_annotations }}
    {{ $k }}: {{ $v }}
    {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations: {}
  name: controller
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: controller-binding
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: controller
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deno-metrics
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - get
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes/metrics
    verbs:
      - get
  - nonResourceURLs:
      - /metrics
      - /metrics/cadvisor
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  name: deno-metrics-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deno-metrics
subjects:
  - kind: ServiceAccount
    name: controller
    namespace: {{ .Release.Namespace }}
---
apiVersion: v1
data:
  foo: bar
kind: ConfigMap
metadata:
  name: pods-config
  namespace: {{ .Release.Namespace }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: controller-auto-scaler-state
  namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: controller
  template:
    metadata:
      labels:
        app: controller
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: karpenter.sh/provisioner-name
                operator: DoesNotExist
            {{- if eq .Values.provider "aws" }}
            - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                - static
            {{- end }}
      containers:
      - envFrom:
        - secretRef:
            name: controller-credentials
        env:
        - name: MIN_ISOLATE_WORKERS_REPLICAS
          value: {{ quote (default 4 .Values.controller.min_isolate_workers_replicas) }}
        - name: MAX_ISOLATE_WORKERS_REPLICAS
          value: {{ quote (default 10 .Values.controller.max_isolate_workers_replicas) }}
        - name: CONTROLLER_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CONTROLLER_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SVMC_ENDPOINT
          value: svmcd.{{ .Release.Namespace }}.svc.cluster.local:7293
        - name: LSC_ENDPOINT
          value: http://lscached-serve.{{ .Release.Namespace }}.svc.cluster.local:4522
        - name: AWS_REGION
          value: {{ .Values.region }}
        {{- if .Values.blob.azure }}
        - name: S3_ENDPOINT
          value: http://s3proxy.{{ .Release.Namespace }}.svc.cluster.local:8080
        - name: AWS_EC2_METADATA_DISABLED
          value: "true"
        - name: AWS_ACCESS_KEY_ID
          value: AKIAEXAMPLE
        - name: AWS_SECRET_ACCESS_KEY
          value: notarealsecretkey
        {{- else if .Values.blob.s3 }}
        - name: AWS_ACCESS_KEY_ID
          value: {{ .Values.blob.s3.access_key }}
        - name: AWS_SECRET_ACCESS_KEY
          value: {{ .Values.blob.s3.secret_key }}
        {{- end }}
        {{- if .Values.blob.azure }}
        - name: HOSTMAP_SOURCE_default
          value: '{"hostname":".{{ .Values.hostname }}","subhosterId":"localdev","s3Endpoint":"http://s3proxy.{{ .Release.Namespace }}.svc.cluster.local:8080","s3Bucket":{{ quote .Values.blob.azure.code_storage_bucket }},"s3Region":{{ quote .Values.region }},"s3Prefix":"hostmap/"}'
        {{- else if .Values.blob.s3 }}
        - name: HOSTMAP_SOURCE_default
          value: '{"hostname":".{{ .Values.hostname }}","subhosterId":"localdev","s3Bucket":{{ quote .Values.blob.s3.code_storage_bucket }},"s3Region":{{ quote .Values.region }},"s3Prefix":"hostmap/"}'
        {{- end }}
        {{- range .Values.controller.env }}
        - name: {{ .name }}
          {{- /* Must convert to yaml, indent and trim to support multiline strings in values */}}
          value: {{ .value | toYaml | indent 10 | trim }}
        {{- end }}
        image: {{ .Values.controller.image }}
        imagePullPolicy: IfNotPresent
        name: controller
        ports:
        - containerPort: 4000
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      priorityClassName: deno-system-critical
      serviceAccount: controller
      terminationGracePeriodSeconds: 0
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  name: controller
  namespace: default
spec:
  ports:
    - port: 4000
      protocol: TCP
      targetPort: 4000
  selector:
    app: controller
  type: ClusterIP
