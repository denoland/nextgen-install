{{ if .Values.blob.azure }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-proxy-config
  namespace: {{ .Release.Namespace }}
data:
  s3proxy.conf: |
    s3proxy.endpoint=http://0.0.0.0:8080
    s3proxy.authorization=none
    jclouds.azureblob.auth=azureKey
    jclouds.provider=azureblob
    jclouds.identity={{ .Values.blob.azure.storage_account }}
    jclouds.credential={{ .Values.blob.azure.credentials }}
    jclouds.endpoint={{ .Values.blob.azure.storage_account_endpoint }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3proxy
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3proxy
  template:
    metadata:
      labels:
        app: s3proxy
    spec:
      containers:
        - image: docker.io/andrewgaul/s3proxy:sha-61adb31
          imagePullPolicy: IfNotPresent
          name: s3proxy
          command: ["java"]
          args: ["-DLOG_LEVEL=info", "-jar", "/opt/s3proxy/s3proxy", "--properties=/etc/s3proxy/s3proxy.conf"]
          resources:
            requests:
              memory: 20Mi
              cpu: 100m
            limits:
              memory: 256Mi
              cpu: 500m
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: "/etc/s3proxy"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: s3-proxy-config
            items:
              - key: s3proxy.conf
                path: s3proxy.conf
      terminationGracePeriodSeconds: 0
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  name: s3proxy
  namespace: {{ .Release.Namespace }}
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: s3proxy
  type: ClusterIP
{{ end }}
