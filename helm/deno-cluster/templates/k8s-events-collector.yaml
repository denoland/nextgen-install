apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-events-collector
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8s-events-collector
  namespace: {{ .Release.Namespace }}
rules:
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8s-events-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8s-events-collector
subjects:
- kind: ServiceAccount
  name: k8s-events-collector
  namespace: {{ .Release.Namespace }}
---
apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: k8s-events
  namespace: {{ .Release.Namespace }}
spec:
  mode: deployment
  replicas: 1
  ports:
    - port: 8888
      name: metrics
    - port: 13133
      name: healthcheck
    - port: 55679
      name: zpages
  serviceAccount: k8s-events-collector
  image: otel/opentelemetry-collector-contrib:0.105.0
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 2Gi
  config:
    receivers:
      k8sobjects:
        auth_type: serviceAccount
        objects:
          - name: events
            mode: watch
            group: events.k8s.io
            namespaces: {{ list "default" .Release.Namespace | uniq }}

    processors:
      batch: {}
      resource:
        attributes:
          - action: insert
            key: "service.name"
            value: "k8s-events-collector"

    exporters:
      otlp:
        endpoint: "http://main-collector.{{ .Release.Namespace }}.svc.cluster.local:4317"
        tls:
          insecure: true

    extensions:
      zpages: {}
      health_check: {}

    service:
      extensions: [health_check, zpages]
      pipelines:
        logs:
          receivers: [k8sobjects]
          processors: [batch, resource]
          exporters: [otlp]
